***Monday, December 12, 2011***
-add column to users table 'status:boolean' to flag if a user
 is online
-modify sign_in and sign_out methods to update the new status field
 --db is not updating due to validation error due to missing password,
   need to investigate what to do because un-encrypted version of user
   password is unknown 

***Tuesday, December 13, 2011, 11:44 pm***
-pass :validates => false to user.save in sign_in and sign_out method
 to solve yesterdays problem
-add named scope "online" to user model to get all users online, based on
 user.status flag. TODO - should also check how long the user has been
 online. Would need to update a timestamp with every user action.
-add default scope to list users alfabetically.
-add 2 messages_controller_spec tests for 'get index'.
-TODO - need tests for users_controller_spec 'get index'.
-TODO - need integration tests for javascript user index dialog.
-TODO - need to think about other tests to add 

***Wednesday, December 14, 2011, 11:43 pm***
-add 3 tests for users controller get index
-add integration test for show online users dialog (pending)
 --need a test_sign_in method that works in integration tests so I can have several users signed in

***Friday, December 16, 2011, 1:24 am***
-implement integration_test_sign_in
-complete users_selection_dialog integration test
-migrated to chatty pants project
-need to figure out html/css issue of message send to section shorter than message stream section

***Saturday, December 17, 2011, 3:21 am***
-clean up css
-create Recipient resource and database
-create user => recipient association
-create Recipient controller and model tests

***Sunday, December 18, 2011, 11:22 pm - post for last 2 days :( ***
-create recipient controller create, index and destroy tests
-implement the Recipient controller create, index and destroy actions
-refactor the recipient destroy controller tests

***Monday, January 2, 2012, 1144 pm***
-create functionality to add and remove recipients visually
-need to add integration test of destroying recipients
-need to add column to messages table to store a comma seperated list of message recipient user ids

***Thursday January 5, 2012, 12:16 am***
-Start to refactor integration tests. Needs more work.
-Update gems.

***Monday January 9, 2012, 12:57 am***
-implement new messaging system that is not based on time, but based on Message.sent
-implement message.set_recievers
-implement message.mark_sent_to(user)
-implement Message.new_messages_for(user)
-TODO - add Message.sent_all boolean field 
